%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2375 592
%%HiResBoundingBox: 0 0 2374.0798 591.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2374.0798 591.12 re
W
q
[0.24 0 0 -0.24 0 591.12] cm
q
0 0 9891.666 2461.9812 re
W*
q
[25.928698 0 0 25.915592 259.33987 259.15594] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 70 57 5 re
f
Q
q
[30.521189 0 0 30.505762 259.33987 488.99261] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
10.594 41.091999 m
4.752 41.091999 0 36.511002 0 30.881001 c
0 25.250999 4.752 20.67 10.594 20.67 c
16.436001 20.67 21.188 25.250999 21.188 30.881001 c
21.188 36.511002 16.436001 41.091999 10.594 41.091999 c
h
10.594 22.67 m
5.855 22.67 2 26.354 2 30.881001 c
2 35.408001 5.855 39.092003 10.594 39.092003 c
15.333 39.092003 19.188 35.408005 19.188 30.881002 c
19.188 26.354 15.333 22.67 10.594 22.67 c
h
f
37.407001 41.091999 m
31.565002 41.091999 26.812 36.510998 26.812 30.880999 c
26.812 25.250999 31.565001 20.67 37.407001 20.67 c
43.249001 20.67 48.000999 25.250999 48.000999 30.881001 c
48.000999 36.511002 43.249001 41.091999 37.407001 41.091999 c
h
37.407001 22.67 m
32.668003 22.67 28.812 26.354 28.812 30.881001 c
28.812 35.408001 32.667 39.092003 37.407001 39.092003 c
42.145 39.092003 46.000999 35.408005 46.000999 30.881002 c
46.000999 26.354 42.146 22.67 37.407001 22.67 c
h
f
20.187 29.375 m
19.98 29.375 19.771999 29.312 19.593 29.179001 c
19.149 28.85 19.056 28.224001 19.385 27.781 c
19.450001 27.691999 21.014 25.618 23.539 25.434 c
25.254999 25.309999 26.924 26.063 28.521999 27.67 c
28.911999 28.062 28.91 28.695 28.518 29.084 c
28.125 29.473999 27.493 29.472 27.104 29.08 c
25.936001 27.905001 24.788 27.353001 23.684 27.429001 c
22.09 27.544001 21.002001 28.956001 20.992001 28.970001 c
20.795 29.235001 20.493 29.375 20.187 29.375 c
h
f
2.999 26.257999 m
2.781 26.257999 2.561 26.187 2.377 26.039999 c
1.945 25.695999 1.873 25.066999 2.217 24.636 c
16.017 7.285999 l
16.354 6.862 16.967001 6.783999 17.4 7.108999 c
22.892 11.227999 l
23.334 11.558999 23.423 12.185999 23.092001 12.627998 c
22.761002 13.068998 22.135 13.160998 21.692001 12.827998 c
16.978001 9.292998 l
3.782 25.879999 l
3.584 26.129 3.292 26.257999 2.999 26.257999 c
h
f
45.126999 26.257999 m
44.832001 26.257999 44.541 26.129 44.343998 25.879999 c
31.146999 9.292 l
26.431999 12.827 l
25.99 13.16 25.362999 13.068999 25.032999 12.627 c
24.700998 12.185 24.790998 11.558 25.233 11.227 c
30.725 7.108 l
31.159 6.783001 31.772001 6.862 32.107002 7.285 c
45.908001 24.635 l
46.252003 25.066999 46.18 25.696001 45.748001 26.039 c
45.563999 26.187 45.345001 26.257999 45.126999 26.257999 c
h
f
Q
q
[27.480637 0 0 27.466745 2200.8884 561.91681] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
6.96 37 m
6.96 35.959999 6.96 29.4 7 28.880001 c
7.04 28.76 7.12 28.52 7.28 28.52 c
7.440001 28.52 7.52 28.6 7.56 28.720001 c
9.160001 31.84 10.56 34.959999 12 38 c
12.2 38.439999 12.64 39.720001 12.76 39.84 c
12.92 40.080002 13.2 40 13.440001 40 c
17.84 40.040001 l
18.360001 40.040001 18.48 39.720001 18.360001 39.280003 c
18.040001 38.080002 15.76 33.840004 15.240001 32.800003 c
14.880001 32.000004 12.480001 27.360003 12.400001 27.000004 c
12.320001 26.840004 12.92 26.560003 13.000001 26.440004 c
14.920001 24.720005 16.640001 22.960005 17 20.280005 c
17.4 17.640005 16.799999 14.760004 15.08 12.640005 c
13.76 11.080006 12.04 10.160006 10 10.040005 c
8.76 9.960005 7.56 10.080005 6.32 10.040005 c
5.24 10.000005 4.48 10.000005 3.12 10.000005 c
2.48 10.000005 2.08 10.360004 2.04 11.040005 c
2.04 11.520004 l
1.959999 14.600004 2.04 17.680004 2.079999 20.720005 c
2.079999 25.360004 1.999999 37.600006 1.999999 39.360004 c
1.999999 39.880005 2.079999 40.000004 2.56 40.000004 c
2.839999 40.000004 3.159999 40.040005 3.44 40.040005 c
4.56 40.040005 5.24 40.000004 6.4 40.000004 c
7.28 40.000004 6.96 38.560005 6.96 37.000004 c
6.96 37 l
h
6.96 21.4 m
7 17.360001 l
7.04 16.76 6.84 15.56 7.4 15.120001 c
8.16 14.56 9.72 15.120001 10.4 15.6 c
12.4 16.960001 12.24 20.32 11.16 22.200001 c
10.639999 23.08 9.76 23.6 8.76 23.880001 c
8.16 24.040001 7.04 24.240002 7 23.280001 c
7 22.640001 6.96 21.400002 6.96 21.400002 c
6.96 21.4 l
h
22.440001 31.799999 m
22.4 31.799999 l
22.4 32.799999 22.359999 33.84 22.4 34.879997 c
22.440001 36.159996 22.52 37.439999 22.6 38.719997 c
22.6 39.159996 22.720001 39.279999 23.120001 39.359997 c
23.960001 39.559998 24.76 39.599998 25.6 39.599998 c
27.76 39.519997 29.92 39.68 32.080002 39.599998 c
32.960003 39.559998 33.360001 39.639999 34.240002 39.48 c
35.040001 39.32 35.320004 38.880001 35.320004 37.68 c
35.240002 36.920002 35.280003 36.599998 35.280003 35.68 c
35.280003 34.360001 34.360004 33.920002 33.560001 33.959999 c
33 34 30.320002 33.919998 29.240002 33.919998 c
27.440002 33.959999 27.720001 34.199997 27.720001 32.32 c
27.720001 30.799999 27.760002 28.84 27.760002 27.279999 c
27.760002 26.439999 27.840002 26.159998 28.640001 26.159998 c
33.639999 26.159998 l
34.439999 26.279999 35 25.719997 35 24.879997 c
35 24.039997 35.080002 23.999998 35.080002 23.159998 c
34.960003 21.959997 l
34.880001 21.279997 34.640003 21.039997 33.960003 21.039997 c
33.520004 21.039997 33.080002 21.079998 32.640003 21.119997 c
30.920004 21.239998 30.120003 20.999996 28.440002 21.119997 c
27.880003 21.119997 27.800003 21.039997 27.760002 20.519997 c
27.600002 18.959997 27.760002 17.239996 27.920002 15.679997 c
27.960003 15.039996 28.120003 14.919996 28.720001 14.879996 c
34.360001 14.839996 l
35.119999 14.759996 35.360001 14.799996 35.32 14.039996 c
35.239998 12.879996 35.360001 11.679997 35.239998 10.519997 c
35.159996 9.879996 34.959999 9.759996 34.239998 9.759996 c
33.039997 9.799996 32.759998 9.799996 31.559998 9.879996 c
30.359997 9.919996 25.559998 9.919996 24.399998 9.919996 c
22.719997 9.919996 22.599998 9.799996 22.559998 11.839996 c
22.479998 13.439997 22.519997 15.079996 22.519997 16.719997 c
22.519997 19.519997 22.359997 29.559998 22.439997 31.799997 c
22.440001 31.799999 l
h
47.48 9.8 m
46.720001 9.84 45.959999 9.96 45.200001 10.2 c
43.560001 10.76 42.080002 11.88 41.080002 13.32 c
40.200001 14.639999 39.84 16.200001 39.720001 17.76 c
39.639999 18.960001 39.760002 20.200001 40.32 21.280001 c
40.919998 22.440001 41.959999 23.440001 42.84 24.400002 c
43.639999 25.240002 44.439999 26.080002 45.32 26.840002 c
46.119999 27.600002 47.040001 28.200003 47.84 29.000002 c
49 30.160002 49.439999 32.800003 48.599998 34.240002 c
47.599998 35.84 45.239998 36.080002 43.68 35.560001 c
42.880001 35.280003 42.16 34.68 41.48 34.200001 c
41.079998 33.920002 40.599998 33.799999 40.32 34.280003 c
40.16 34.520004 40.079998 34.800003 40 35.040001 c
39.720001 36.040001 39.360001 36.959999 39.32 38.040001 c
39.279999 39.280003 41.639999 39.639999 42.52 39.84 c
46.440002 40.759998 51.16 40.040001 53.200001 36.16 c
53.600002 35.360001 53.880001 34.52 54.040001 33.639999 c
54.080002 33.32 54.120003 33.040001 54.120003 32.720001 c
54.280003 30.160002 53.240002 28.000002 51.680004 26.080002 c
50.000004 24.000002 47.880005 22.560001 45.920006 20.760002 c
44.720005 19.640001 44.280006 17.880001 44.640007 16.280003 c
45.000008 14.560002 46.960007 14.120003 48.440006 14.560002 c
48.880005 14.680002 49.240005 14.880002 49.640007 15.120003 c
49.880009 15.240003 50.120007 15.400003 50.440006 15.400003 c
51.000008 15.440002 51.080006 15.000003 51.200005 14.560002 c
51.480003 13.560002 51.960003 12.760002 52.160004 11.800002 c
52.360004 10.720002 51.480003 10.520002 50.600002 10.240002 c
49.560001 9.960002 48.560001 9.760002 47.480003 9.800002 c
47.48 9.8 l
h
70.120003 28.16 m
70.120003 29.959999 70.080002 33.52 70.040001 33.52 c
70.040001 38.959999 l
70.040001 39.200001 70 39.599998 70.120003 39.84 c
70.240005 40.119999 70.600006 40.040001 70.840004 40 c
72.000008 39.880001 73.160004 40.040001 74.320007 40 c
75.600006 39.959999 75.200005 38 75.160004 37.200001 c
75 35.440002 75.200005 22.040001 75.200005 17.240002 c
75.200005 15.080002 75.120003 10.640001 75.000008 10.440002 c
74.800011 10.080002 74.280006 10.000002 73.880005 9.960001 c
73.000008 9.800001 72.560005 10.040001 71.240005 10.040001 c
69.920006 10.040001 69.840004 10.440001 69.840004 11.840001 c
69.840004 13.040001 l
69.800003 14.000001 69.960007 20.720001 69.960007 21.800001 c
69.960007 22.320002 69.920006 22.360001 69.400009 22.360001 c
68.080009 22.32 66.240005 22.480001 64.880013 22.360001 c
62.920013 22.200001 63.360012 22.360001 63.240013 20.560001 c
63.240013 20.320002 l
63.240013 17.760002 63.560013 11.120002 63.440014 10.720001 c
63.240013 10.120001 63.000015 10.000001 62.480015 10.040001 c
61.280014 10.120001 60.040016 9.920001 58.840015 10.000001 c
58.440014 10.040001 58.320015 10.160001 58.200016 10.560001 c
58.160015 10.760001 58.120014 10.960001 58.120014 11.160002 c
58.120014 12.400002 58.200016 14.080002 58.240013 15.320002 c
58.120014 39.040001 l
58.120014 40.080002 59.040012 39.959999 61.080013 39.959999 c
62.960014 39.959999 63.440014 40.399998 63.440014 38.16 c
63.440014 36.360001 63.320015 34.080002 63.360012 32.279999 c
63.400013 30.879999 63.360012 29.519999 63.360012 28.119999 c
63.400013 27.599998 63.520012 27.439999 64.000015 27.439999 c
65.760017 27.399998 67.680016 27.439999 69.440018 27.439999 c
70.000015 27.439999 70.120018 27.519999 70.120018 28.159998 c
70.120003 28.16 l
h
85.040001 10.04 m
84.639999 10.04 84.239998 10.08 83.840004 10.08 c
83.240005 10.08 82.520004 9.96 82.400002 10.76 c
82 14.16 81.639999 17.92 81.239998 21.32 c
80.559998 26.92 79.919998 32.68 79.279999 38.279999 c
79.199997 39.039997 79.119995 39.759998 79.959999 39.919998 c
81.239998 40 82.199997 40 83.279999 39.959999 c
83.68 40 84.119995 40.040001 84.239998 39.559998 c
84.32 39.359997 84.32 39.159996 84.32 38.959999 c
84.400002 38.040001 85.599998 26.52 86.080002 26.52 c
86.840004 26.52 88.840004 35.880001 89.800003 39.32 c
89.920006 39.799999 90.160004 40 90.639999 39.959999 c
91.639999 39.879997 92.599998 39.959999 93.599998 39.959999 c
94.599998 39.959999 94.400002 39.32 94.599998 38.48 c
94.839996 37.560001 97.159996 26.48 97.720001 26.48 c
98.360001 26.48 99.68 39.32 99.800003 39.599998 c
100.040001 40.16 100.720001 39.919998 101.200005 39.919998 c
101.920006 39.919998 102.600006 40 103.520004 39.919998 c
104.200005 39.839996 104.880005 40.079998 104.920006 39.199997 c
104.920006 38.999996 104.840004 38.799995 104.800003 38.599998 c
104.639999 37.599998 104.440002 36.399998 104.240005 35.399998 c
103.960007 33.32 103.560005 31.279999 103.280006 29.199997 c
102.880005 25.919996 102.480003 22.639997 102.120003 19.359997 c
101.840004 16.559998 101.440002 13.399997 101.200005 10.599997 c
101.120003 9.679997 100.080002 9.999996 99.440002 9.999996 c
96.68 9.999996 l
96.239998 9.999996 96.040001 10.839996 95.959999 11.279996 c
95.720001 12.399996 92.959999 26.839996 92.040001 26.839996 c
91.120003 26.839996 88.160004 13.639997 87.639999 10.759996 c
87.519997 10.119996 87.080002 9.919996 86.479996 9.919996 c
85.040001 10.04 l
h
114.440002 29.68 m
114.32 25.120001 114.360001 20.280001 114.400002 15.76 c
114.400002 14.360001 114.32 12.84 114.32 11.440001 c
114.32 9.92 113.720001 10 112.919998 9.960001 c
111.759995 9.920001 111.239998 9.920001 110.080002 9.920001 c
109.32 9.880001 109 10.080001 109 10.840001 c
109 14.760001 108.879997 25.84 108.919998 27.440002 c
108.959999 29.040005 109.119995 36.320004 109.040001 37.920002 c
109 38.480003 109.040001 39.040001 109.080002 39.600002 c
109.120003 39.800003 109.240005 40.000004 109.560005 40.000004 c
110.880005 39.920002 112.120003 39.920002 113.440002 39.880005 c
113.920006 39.840004 114.32 39.720005 114.520004 39.200005 c
114.560005 38.920006 114.440002 31.600004 114.440002 29.680004 c
114.440002 29.68 l
h
149.600006 17.360001 m
150.440002 19.84 150.639999 22.52 150.639999 25.16 c
150.639999 27.360001 150.240005 29.48 149.679993 31.6 c
148.959991 34.119999 147.759995 36.400002 145.599991 37.880001 c
143.999985 39.040001 142.319992 39.800003 140.359985 40 c
140.079987 40 139.839981 40.040001 139.559982 40.040001 c
139.319977 40.040001 139.079987 40 138.799988 40 c
136.839981 39.799999 135.159988 39.040001 133.519989 37.880001 c
131.399994 36.400002 130.159988 34.120003 129.479996 31.6 c
128.87999 29.48 128.519989 27.360001 128.519989 25.16 c
128.519989 22.52 128.719986 19.84 129.559982 17.360001 c
131.039978 13.08 135.11998 10.040001 139.559982 9.960001 c
143.999985 10.040001 148.079987 13.080001 149.599976 17.360001 c
149.600006 17.360001 l
h
145.720001 28.08 m
146.119995 25.639999 145.960007 23.16 145.479996 20.719999 c
145 18.519999 144.039993 16.359999 142.199997 15.039999 c
141.87999 14.799999 141.520004 14.599999 141.160004 14.479999 c
140.639999 14.239999 140.080002 14.159999 139.559998 14.159999 c
139.039993 14.159999 138.520004 14.239999 138 14.479999 c
137.600006 14.599999 137.279999 14.799998 136.960007 15.039999 c
135.080002 16.359999 134.12001 18.519999 133.680008 20.719999 c
133.200012 23.16 133.040009 25.639999 133.440002 28.08 c
133.839996 30.280001 134.639999 33.239998 136.720001 34.360001 c
137.600006 34.84 138.559998 35.16 139.559998 35.200001 c
140.559998 35.16 141.559998 34.84 142.440002 34.360001 c
144.520004 33.240002 145.320007 30.280001 145.720001 28.08 c
h
154.679993 15.24 m
154.719986 17.6 154.719986 37.639999 154.719986 39.279999 c
154.719986 39.879997 154.799988 40 155.399979 40 c
156.759979 40 156.759979 40.040001 158.11998 40 c
158.399979 40 158.879974 40 159.11998 39.880001 c
159.399979 39.760002 159.239975 30.32 159.239975 29.800001 c
159.239975 29.240002 160.35997 29.360001 160.679977 29.360001 c
167.35997 29.360001 169.19998 24.560001 169.19998 20.48 c
169.19998 16.799999 168.47998 10 160.159988 10 c
158.719986 10 157.23999 10.04 155.839981 10.04 c
155.519974 10.04 155.11998 10 154.839981 10.2 c
154.519974 10.44 154.639984 14 154.679977 15.24 c
154.679993 15.24 l
h
159.279999 23.48 m
159.279999 22.6 159.240005 17.360001 159.279999 15.76 c
159.279999 15.520001 159.240005 15.24 159.279999 14.96 c
159.399994 14.520001 159.919998 14.520001 160.319992 14.56 c
162.639999 14.72 163.959991 16.76 164.159988 18.92 c
164.319992 20.48 164.119995 22.799999 162.999985 24.040001 c
162.199982 24.880001 161.159988 25.400002 159.799988 25.400002 c
159.519989 25.400002 159.23999 25.080002 159.23999 24.800001 c
159.23999 24.360001 159.23999 23.920002 159.279984 23.480001 c
159.279999 23.48 l
h
178.28 35.639999 m
178.31999 36.880001 178.31999 38.119999 178.36 39.360001 c
178.36 39.920002 178.39999 40 178.96001 40 c
182.56001 40 l
183.32001 40 183.16002 38.720001 183.12001 38.040001 c
183.24001 15.640001 l
183.24001 15.040001 183.44 14.840001 184.24001 14.840001 c
187.76001 14.840001 l
188.60001 14.840001 188.40001 13.400002 188.40001 12.400002 c
188.40001 11.520001 188.72002 10.000002 187.76001 10.000002 c
187.08002 10.000002 180.56001 10.000002 177.88 10.040002 c
176.56 10.040002 175.48001 10.000002 174.16 10.000002 c
173.16 10.000002 173.2 10.800002 173.2 12.560001 c
173.2 13.680001 173.16 14.800001 174.12 14.800001 c
174.67999 14.800001 176.95999 14.800001 177.59999 14.840001 c
177.99998 14.840001 178.27998 14.960001 178.35999 15.400002 c
178.35999 15.520001 178.39998 15.640001 178.39998 15.760001 c
178.39998 18.640001 178.19998 32.040001 178.27998 35.639999 c
178.28 35.639999 l
h
197.96001 29.68 m
197.84001 25.120001 197.88 20.280001 197.92001 15.76 c
197.92001 14.360001 197.84001 12.84 197.84001 11.440001 c
197.84001 9.92 197.24001 10 196.44002 9.960001 c
195.28001 9.920001 194.76003 9.920001 193.60002 9.920001 c
192.84003 9.880001 192.52002 10.080001 192.52002 10.840001 c
192.52002 14.760001 192.40002 25.84 192.44002 27.440002 c
192.48001 29.040005 192.64001 36.320004 192.56001 37.920002 c
192.52002 38.480003 192.56001 39.040001 192.60001 39.600002 c
192.64 39.800003 192.76001 40.000004 193.08 40.000004 c
194.40001 39.920002 195.64 39.920002 196.96001 39.880005 c
197.44 39.840004 197.84001 39.720005 198.04001 39.200005 c
198.08 38.920006 197.96001 31.600004 197.96001 29.680004 c
197.96001 29.68 l
h
217.84 14.72 m
217.87999 13.400001 217.84 12.32 217.84 11.04 c
217.84 9.56 215.16 9.72 214.2 9.76 c
209.92 10.04 205.84 12.76 203.88 16.479999 c
203.32001 17.559999 202.92 18.68 202.64 19.84 c
201.96001 22.559999 201.92 25.440001 202.24001 28.200001 c
202.52 30.800001 203.20001 33.400002 204.8 35.48 c
207.56 39.119999 212.64 40.400002 217 39.720001 c
217.2 39.68 217.39999 39.639999 217.56 39.52 c
217.67999 39.439999 217.8 39.279999 217.8 39.119999 c
217.92 36.84 l
217.95999 36.119999 217.92 36.16 217.92 35.439999 c
217.92 34.48 215.92 35.199997 214.67999 35.199997 c
213.48 35.199997 212.2 35.159996 211.12 34.599998 c
209.2 33.519997 208.12 31.359999 207.51999 29.319998 c
206.84 27.119997 206.67999 24.759998 207.07999 22.519997 c
207.55998 19.599997 208.95999 16.239996 212.03999 15.239996 c
213.79999 14.639996 215.67999 14.839996 217.43999 15.039996 c
217.67999 15.079996 217.83998 14.919996 217.83998 14.719997 c
217.84 14.72 l
h
f
Q
q
[10.464624 0 0 10.459336 8218.5186 724.70563] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
50 10 m
10 90 l
90 90 l
50 10 l
h
50 24.909 m
72.545998 70 l
42.360001 70 l
45.693001 63.333 l
61.757 63.333 l
50 39.813999 l
31.575001 76.667 l
75.878998 76.667 l
79.211998 83.333 l
20.788 83.333 l
50 24.909 l
h
f
Q
q
[27.911316 0 0 27.897211 9226.8291 550.32672] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
2 13.92 m
1.96 16.4 2.2 34.52 2.16 35.84 c
2.16 37.080002 2.16 38.32 2.2 39.560001 c
2.2 39.760002 2.32 39.960003 2.52 39.960003 c
5.32 40.080002 8.08 39.840004 10.879999 39.880001 c
11.799999 39.920002 12.719999 39.880001 13.599999 39.880001 c
14.48 39.84 14.56 39.48 14.52 38.760002 c
14.48 37.640003 14.48 36.640003 14.48 35.560001 c
14.44 35 14.12 34.800003 13.639999 34.800003 c
11.999999 34.840004 10.36 34.760002 8.719999 34.840004 c
8.44 34.880005 8.159999 34.880005 7.879999 34.880005 c
7.399999 34.840004 7.279999 34.720005 7.239999 34.200005 c
7.239999 33.600006 l
7.119999 30.280006 7.359999 26.840006 7.359999 23.520006 c
7.319999 20.720007 7.359999 18.200006 7.319999 15.720006 c
7.319999 14.640006 7.319999 13.560006 7.279999 12.520006 c
7.239999 11.880006 7.279999 11.200007 7.119999 10.560006 c
7.04 10.320006 6.92 10.000006 6.639999 10.000006 c
2.879999 10.000006 l
2.239999 10.000006 2.04 10.440005 1.999999 11.080006 c
1.999999 13.920006 l
2 13.92 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
